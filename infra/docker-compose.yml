# docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=SDIS
      - ENV=development
      - DATABASE_URL=postgresql://sdis_user:sdis_pass@postgres:5432/sdis_db
      - EMBEDDING_PROVIDER=mock
      - VECTORSTORE_PATH=/data/faiss
      - JWT_SECRET=development_jwt_secret_change_in_production
      - SIGNING_PRIVATE_KEY=/keys/private.pem
      - SIGNING_PUBLIC_KEY=/keys/public.pem
      - AUDIT_LOG_PATH=/data/audit.log
      - STORAGE_BACKEND=local
    volumes:
      - ./data/faiss:/data/faiss
      - ./data/documents:/data/documents
      - ./data/logs:/data/logs
      - ./keys:/keys:ro
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=sdis_db
      - POSTGRES_USER=sdis_user
      - POSTGRES_PASSWORD=sdis_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sdis_user -d sdis_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Admin interface for Postgres
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@sdis.local
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles: ["admin"]

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: sdis_network